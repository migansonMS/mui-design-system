import{j as e}from"./iframe-CkTs3eTz.js";import{P as i}from"./Paper-Cu2WgBAQ.js";import{T as p}from"./Typography-CRj5WkeB.js";import{D as m}from"./DataGrid-CrGN2mGT.js";import"./preload-helper-D9Z9MdNV.js";import"./useTheme-DajQEPpF.js";import"./createSimplePaletteValueFilter-DQpw-qH5.js";import"./ButtonBase-DowNzL_u.js";import"./ownerDocument-DW-IO8s5.js";import"./getReactElementRef-5MRyPtE6.js";import"./index-rmtliNu4.js";import"./debounce-Be36O1Ab.js";import"./getThemeProps-B9ZzK8jZ.js";import"./createSvgIcon-C9iwLWcC.js";import"./Checkbox-CAuJn01g.js";import"./TextField-DlXBpUWV.js";import"./useSlot-BSX8bjL_.js";import"./mergeSlotProps-ChR5R7rd.js";import"./ownerWindow-HkKU3E4x.js";import"./useSlotProps-CTPqvCqN.js";import"./Grow-Bep7KA8V.js";import"./Modal-DnABQv_T.js";import"./MenuItem-DenTbWrP.js";import"./dividerClasses-BB5fxIZS.js";import"./IconButton-DfVMvn7J.js";import"./Button-BSpwk4rG.js";import"./ListItemText-QZ2p9NTM.js";import"./Divider-0TrSOOP_.js";import"./Chip-BdyMt7Cc.js";import"./FormControlLabel-CYo06a1C.js";import"./Close-CNRUZ3DU.js";import"./KeyboardArrowRight-DYyPzXVF.js";import"./ClickAwayListener-C7en22qL.js";import"./InputAdornment-D0iqF54e.js";const s=[{field:"type",headerName:"Type",flex:1},{field:"example",headerName:"Example",flex:1},{field:"notes",headerName:"Notes",flex:2}],n=["Typography","Chip","Status","Button","Badge","Tag","Avatar","Tooltip","Dialog","Link"],d=["h4 + muted","body2Semi + caption","filled/success","outlined/warning","error/contained","8×8 dot","icon + label","startIcon + text","hover tooltip","click to open"],l=["Sizes & weights from theme","Colors via Chip color prop","Simple Box badge","Use sx for overrides","Keep contrast ≥ 4.5:1","Follows theme.palette","Variant controls style","Use Typography variants","Accessible label required","Keep dense spacing"],t=o=>o[Math.floor(Math.random()*o.length)],c=Array.from({length:50},(o,a)=>({id:a+1,type:t(n),example:t(d),notes:t(l)})),X={title:"Components/DataGrid"},r=()=>e.jsxs(i,{variant:"card",children:[e.jsx(p,{variant:"h2",children:"Themed DataGrid"}),e.jsx(m,{rows:c,columns:s})]});r.__docgenInfo={description:"",methods:[],displayName:"ThemedHeader"};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`() => <Paper variant="card">\r
    <Typography variant="h2">Themed DataGrid</Typography>\r
    <DataGrid rows={rows} columns={columns} />\r
  </Paper>`,...r.parameters?.docs?.source}}};const Y=["ThemedHeader"];export{r as ThemedHeader,Y as __namedExportsOrder,X as default};
